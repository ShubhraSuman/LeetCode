Tabulation: Bottom Up
Memoization: Top Down

Tabulation Method – Bottom Up Dynamic Programming 

As the name itself suggests starting from the bottom and accumulating answers to the top.

Bottom up is using loops.(Iterative)
Top down (Recursion + memoisation)


Substring
A subarray or substring will always be contiguous
A substring of a string s is a string s' that occurs in s. A substring is almost similar to a subarray, but it is in the context of strings.
For example, the substrings of string 'apple' are 'apple', 'appl', 'pple', 'app', 'ppl', 'ple', 'ap', 'pp', 'pl', 'le', 'a', 'p', 'l', 'e', ''.


Subsequence 
A subsequence is a sequence that can be derived from another sequence by removing zero or more elements, without changing the order of the remaining elements. 
For the same example, there are 15 sub-sequences. They are (1), (2), (3), (4), (1,2), (1,3),(1,4), (2,3), (2,4), (3,4), (1,2,3), (1,2,4), (1,3,4), (2,3,4), (1,2,3,4). More generally, we can say that for a sequence of size n, we can have (2n-1) non-empty sub-sequences in total.

Consider an array:
 {1,2,3,4}
 
Subarray: contiguous sequence in an array i.e.
{1,2},{1,2,3}

Subsequence: Need not to be contiguous, but maintains order i.e.
{1,2,4}

Subset: Same as subsequence except it has empty set i.e.
 {1,3},{}
 
Given an array/sequence of size n, possible
Subarray = n*(n+1)/2
Subseqeunce = (2^n) -1 (non-empty subsequences)
Subset = 2^n

for example, we have a list say [3,5,7,8,9]. here

subset doesn’t need to maintain order and has non-contiguous behavior. For example, [9,3] is a subset
Subset: which mean any possible combinations.

subsequence maintain order and has non-contiguous behavior. For example, [5,8,9] is a subsequence

subarray maintains order and has contiguous behavior. For example, [8,9] is a subarray

